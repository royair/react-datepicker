{"version":3,"sources":["store/calendar.js","store/index.js","components/Day.jsx","components/Week.jsx","components/Month.jsx","components/Legend.jsx","components/MonthList.jsx","components/DaysOfWeek.jsx","components/Icons.jsx","components/Datepicker.jsx","App.js","serviceWorker.js","index.js"],"names":["Calendar","_this","this","Object","classCallCheck","init","i","startOfMonth","moment","startOf","add","month","Month","months","push","forEach","index","prev","next","isOpen","find","selected","hoveredMonth","reduce","acc","curr","concat","weeks","days","day","hovered","today","endOfMonth","endOf","endOfWeekMonth","startOfWeekMonth","current","year","value","id","name","isSame","isSameOrBefore","week","Week","startOfWeek","date","isBetween","InRangeDay","OutOfRangeDay","replace","slice","reverse","Day","format","undefined","_Day","_this2","possibleConstructorReturn","getPrototypeOf","call","selectable","isSameOrAfter","inherits","_Day2","_this3","decorate","observable","selectedMonth","computed","selectedDay","Store","calendar","store","_this$props","props","onClickDay","className","classNames","react_default","a","createElement","onClick","Component","defaultProps","observer","restProps","objectWithoutProperties","map","components_Day","assign","key","components_Week","Legend","MonthList","onMouseOver","setRef","list","ref","el","DaysOfWeek","IconNext","_ref","disabled","xmlns","viewBox","d","fill","IconPrevious","_ref2","IconClose","_ref3","Datepicker","handleClickNext","handleClickPrev","handleToggleShowList","closeList","openList","handleMonthSelection","handleMonthHovered","handleDaySelection","console","log","toDate","setHoveredMonthElem","hoveredMonthElem","handleMenuKeyStrokes","e","newHoveredMonth","scrollIntoView","handleKeyStrokes","onClickOutside","monthsListElem","contains","target","document","addEventListener","removeEventListener","opened","element","components_MonthList","components_Month","inject","App","src_components_Datepicker","Boolean","window","location","hostname","match","ReactDOM","render","index_module","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ae7ea85c.chunk.js","sourcesContent":["import { decorate, observable, computed } from \"mobx\";\nimport moment from \"moment\";\n\nclass Calendar {\n  constructor() {\n    this.months = [];\n    this.isOpen = false;\n\n    this.init();\n  }\n\n  init = () => {\n    // run for next 12 months\n    for (let i = 0; i < 12; i++) {\n      const startOfMonth = moment().startOf('month').add(i, 'M');\n      const month        = new Month(startOfMonth);\n\n      this.months.push(month);\n    }\n\n    // add prev & next to each month\n    this.months.forEach((month, index, months) => {\n      month.prev = months[index - 1];\n      month.next = months[index + 1];\n    });\n  };\n\n  get selectedMonth() {\n    return this.months.find((month) => month.selected);\n  };\n\n  set selectedMonth(month) {\n    this.months.forEach((month) => month.selected = false);\n    month.selected    = true;\n    this.hoveredMonth = month;\n  }\n\n  get selectedDay() {\n    let weeks = this.months.reduce((acc, curr) => acc.concat(curr.weeks), []);\n    let days  = weeks.reduce((acc, curr) => acc.concat(curr.days), []);\n    return days.find((day) => day.selected);\n  };\n\n  set selectedDay(day) {\n    let weeks = this.months.reduce((acc, curr) => acc.concat(curr.weeks), []);\n    let days  = weeks.reduce((acc, curr) => acc.concat(curr.days), []);\n    days.forEach((day) => day.selected = false);\n    day.selected = true;\n  }\n\n  get hoveredMonth() {\n    return this.months.find((month) => month.hovered);\n  };\n\n  set hoveredMonth(month) {\n    this.months.forEach((month) => month.hovered = false);\n    month && (month.hovered = true);\n  }\n}\n\nclass Month {\n  constructor(startOfMonth) {\n    let monthNames       = ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר'];\n    let today            = moment();\n    let endOfMonth       = moment(startOfMonth).endOf('month');\n    let endOfWeekMonth   = moment(startOfMonth).endOf('month').day('saturday');\n    let startOfWeekMonth = moment(startOfMonth).startOf('month').day('sunday');\n    let current          = moment(startOfWeekMonth);\n\n    this.year     = startOfMonth.year();\n    this.value    = startOfMonth.month();\n    this.id       = `${this.year}-${this.value}`;\n    this.name     = `${monthNames[this.value]} ${this.year}`;\n    this.selected = today.isSame(startOfMonth, 'month') ? true : false;\n    this.hovered  = false;\n    this.weeks    = [];\n\n    // run for each week of the month\n    while (current.isSameOrBefore(endOfWeekMonth, 'day')) {\n      let week = new Week(current, startOfMonth, endOfMonth);\n\n      this.weeks.push(week);\n\n      current.add(1, 'week');\n    }\n  }\n}\n\nclass Week {\n  constructor(startOfWeek, startOfMonth, endOfMonth) {\n    this.id   = startOfWeek.week();\n    this.days = [];\n\n    // loop for 7 days of week\n    for (let i = 0; i < 7; i++) {\n      let date = new moment(startOfWeek).add(i, 'day');\n      let day  = date.isBetween(startOfMonth, endOfMonth, 'day', '[]')\n        ? new InRangeDay(date)\n        : new OutOfRangeDay(date);\n\n      this.days.push(day);\n    }\n    // change order of days to match rtl languages\n    this.days.replace(this.days.slice().reverse());\n  }\n}\n\nexport class Day {\n  constructor(date) {\n    this.id       = date.format('x');\n    this.date     = moment(date);\n    this.prev     = undefined;\n    this.next     = undefined;\n    this.selected = false;\n  }\n}\n\nexport class InRangeDay extends Day {\n  constructor(date) {\n    super(date);\n\n    let today = moment();\n\n    this.value      = date.format('D');\n    this.selectable = date.isSameOrAfter(today, 'day');\n  }\n}\n\nexport class OutOfRangeDay extends Day {\n  constructor(date) {\n    super(date);\n\n    this.value      = undefined;\n    this.selectable = false;\n  }\n}\n\ndecorate(Calendar,\n  {\n    months: observable,\n    isOpen: observable,\n    selectedMonth: computed,\n    selectedDay: computed,\n    hoveredMonth: computed,\n  });\n\ndecorate(Month,\n  {\n    year: observable,\n    value: observable,\n    id: observable,\n    name: observable,\n    selected: observable,\n    hovered: observable,\n    weeks: observable,\n  });\n\ndecorate(Week,\n  {\n    id: observable,\n    days: observable,\n  });\n\ndecorate(Day,\n  {\n    id: observable,\n    date: observable,\n    prev: observable,\n    next: observable,\n    selected: observable,\n  });\n\nexport default Calendar;","import { observable, decorate } from 'mobx';\nimport Calendar from './calendar';\n\nclass Store {\n  calendar = new Calendar();\n}\n\ndecorate(Store, { calendar: observable });\n\nexport default new Store();\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { observer } from \"mobx-react\";\n\nclass Day extends Component {\n  render() {\n    const { day, onClickDay, selectedDay } = this.props;\n    const className                        = classNames('day', {\n      selectable: day.selectable,\n      selected: day === selectedDay\n    });\n\n    return (\n      <span className={className}\n            onClick={() => onClickDay(day)}>{day.value}</span>\n    )\n  }\n}\n\n// set default props\nDay.defaultProps = {\n  day: {}\n};\n\nexport default observer(Day);\n","import React, { Component } from 'react';\nimport Day from \"./Day\";\nimport { observer } from \"mobx-react\";\n\nclass Week extends Component {\n  render() {\n    const { week, onClickDay, ...restProps} = this.props;\n    const days      = week && week.days.map((day) => <Day\n      key={day.id}\n      day={day}\n      onClickDay={onClickDay}\n      {...restProps}></Day>)\n\n    return (\n      <div className={'week'}>{days}</div>\n    )\n  }\n}\n\n// set default props\nWeek.defaultProps = {\n  week: {\n    days: []\n  }\n};\n\nexport default observer(Week);\n","import React, { Component } from 'react';\nimport Week from \"./Week\";\n\nclass Month extends Component {\n  render() {\n    const { month, onClickDay, ...restProps } = this.props;\n    const weeks                 = month.weeks.map((week) => <Week\n      key={week.id}\n      week={week}\n      onClickDay={onClickDay}\n      {...restProps}></Week>);\n\n    return (\n      <div className={'month'}>{weeks}</div>\n    )\n  }\n}\n\n// set default props\nMonth.defaultProps = {\n  month: {\n    weeks: []\n  }\n};\n\nexport default Month;\n","import React from 'react';\n\nexport default function Legend() {\n  return (\n    <div className=\"legend\">\n      <ul>\n        <li>\n          <span className='circle blue'></span>\n          <label>תאריכי יציאה וחזרה אפשריים</label>\n        </li>\n        <li>\n          <span className='circle pink'></span>\n          <label>אפשרית טיסת צ'רטר בתאריכים אלו</label>\n        </li>\n\n      </ul>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport classNames from \"classnames\";\nimport { observer } from \"mobx-react\";\n\nclass MonthList extends Component {\n  render() {\n    const { months, onClick, onMouseOver, setRef } = this.props;\n    const list                                     = months.map((month) => (\n      <li key={month.id}\n          className={classNames({ hovered: month.hovered })}\n          ref={(el) => {\n            if (month.hovered) {\n              setRef(el)\n            }\n          }}\n          onClick={() => onClick(month)}\n          onMouseOver={() => onMouseOver(month)}>\n        {month.name}\n      </li>));\n\n    return (\n      <ul>\n        {list}\n      </ul>\n    )\n  }\n}\n\n// set default props\nMonthList.defaultProps = {\n  month: {\n    weeks: []\n  }\n};\n\nexport default observer(MonthList);\n","import React from 'react';\r\n\r\nexport default function DaysOfWeek() {\r\n  return (\r\n    <div className=\"days-of-week\">\r\n      <div className=\"day\">ש'</div>\r\n      <div className=\"day\">ו'</div>\r\n      <div className=\"day\">ה'</div>\r\n      <div className=\"day\">ד'</div>\r\n      <div className=\"day\">ג'</div>\r\n      <div className=\"day\">ב'</div>\r\n      <div className=\"day\">א'</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport classNames from \"classnames\";\n\nexport function IconNext({onClick, className, disabled}) {\n  return (\n    <div\n      className={classNames('icon-container', { disabled })}\n      onClick={onClick}>\n      <svg className={classNames('icon icon-next', className)}\n           xmlns=\"http://www.w3.org/2000/svg\"\n           viewBox=\"8 6 8 12\">\n        <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      </svg>\n    </div>\n  );\n};\n\nexport function IconPrevious({onClick, className, disabled}) {\n  return (\n    <div\n      className={classNames('icon-container', { disabled })}\n      onClick={onClick}>\n      <svg className={classNames('icon icon-previous', className)}\n           xmlns=\"http://www.w3.org/2000/svg\"\n           viewBox=\"8 6 8 12\">\n        <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/>\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n      </svg>\n    </div>\n  );\n}\n\nexport function IconClose({className}) {\n  return (\n    <svg className={classNames('icon icon-close', className)}\n         xmlns=\"http://www.w3.org/2000/svg\"\n         viewBox=\"63 63 386 386\">\n      <path\n        d=\"M437.5 386.6L306.9 256l130.6-130.6c14.1-14.1 14.1-36.8 0-50.9-14.1-14.1-36.8-14.1-50.9 0L256 205.1 125.4 74.5c-14.1-14.1-36.8-14.1-50.9 0-14.1 14.1-14.1 36.8 0 50.9L205.1 256 74.5 386.6c-14.1 14.1-14.1 36.8 0 50.9 14.1 14.1 36.8 14.1 50.9 0L256 306.9l130.6 130.6c14.1 14.1 36.8 14.1 50.9 0 14-14.1 14-36.9 0-50.9z\"/>\n    </svg>\n  );\n}","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport Month from './Month';\r\nimport Legend from './Legend';\r\nimport MonthList from './MonthList';\r\nimport DaysOfWeek from './DaysOfWeek';\r\nimport { IconNext, IconPrevious, IconClose } from './Icons';\r\n\r\nimport './Datepicker.scss';\r\n\r\nclass Datepicker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.calendar         = this.props.store.calendar;\r\n    this.monthsListElem   = undefined;\r\n    this.hoveredMonthElem = undefined;\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeyStrokes);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handleKeyStrokes);\r\n  }\r\n\r\n  handleClickNext = () => {\r\n    // abort if not next month\r\n    if (!this.calendar.selectedMonth.next) return;\r\n\r\n    this.calendar.selectedMonth = this.calendar.selectedMonth.next;\r\n  };\r\n\r\n  handleClickPrev = () => {\r\n    // abort if not next month\r\n    if (!this.calendar.selectedMonth.prev) return;\r\n\r\n    this.calendar.selectedMonth = this.calendar.selectedMonth.prev;\r\n  };\r\n\r\n  handleToggleShowList = () => {\r\n    this.calendar.isOpen ? this.closeList() : this.openList();\r\n  };\r\n\r\n  handleMonthSelection = (selectedMonth) => {\r\n    this.calendar.selectedMonth = selectedMonth;\r\n    this.closeList();\r\n  };\r\n\r\n  handleMonthHovered = (hoveredMonth) => {\r\n    this.calendar.hoveredMonth = hoveredMonth;\r\n  };\r\n\r\n  handleDaySelection = (selectedDay) => {\r\n    // abort if day not selectable\r\n    if (!selectedDay.selectable) return;\r\n\r\n    this.calendar.selectedDay = selectedDay;\r\n    console.log(selectedDay.date.toDate());\r\n  };\r\n\r\n  setHoveredMonthElem = (el) => {\r\n    this.hoveredMonthElem = el;\r\n  };\r\n\r\n  handleMenuKeyStrokes = (e) => {\r\n\r\n    // handle keystrokes for opened menu\r\n    if (this.calendar.isOpen) {\r\n      let newHoveredMonth;\r\n\r\n      switch (e.key) {\r\n        case 'ArrowDown':\r\n          // if no hovered month set it to the first month\r\n          newHoveredMonth = this.calendar.hoveredMonth\r\n            ? this.calendar.hoveredMonth.next\r\n            : this.calendar.months[0];\r\n\r\n          // abort if at the end of list\r\n          if (!newHoveredMonth) return;\r\n\r\n          this.calendar.hoveredMonth = newHoveredMonth;\r\n          this.hoveredMonthElem && this.hoveredMonthElem.scrollIntoView();\r\n          break;\r\n\r\n        case 'ArrowUp':\r\n          // if no hovered month set it to the first month\r\n          newHoveredMonth = this.calendar.hoveredMonth\r\n            ? this.calendar.hoveredMonth.prev\r\n            : this.calendar.months[0];\r\n\r\n          // abort if at the end of list\r\n          if (!newHoveredMonth) return;\r\n\r\n          this.calendar.hoveredMonth = newHoveredMonth;\r\n          this.hoveredMonthElem && this.hoveredMonthElem.scrollIntoView();\r\n          break;\r\n\r\n        case 'Escape':\r\n          this.closeList();\r\n          break;\r\n\r\n        case 'Enter':\r\n          this.calendar.selectedMonth = this.calendar.hoveredMonth;\r\n          this.closeList();\r\n          break;\r\n\r\n        default:\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n  handleKeyStrokes = (e) => {\r\n    switch (e.key) {\r\n      case 'ArrowLeft':\r\n        this.handleClickNext();\r\n        this.hoveredMonthElem && this.hoveredMonthElem.scrollIntoView();\r\n        break;\r\n\r\n      case 'ArrowRight':\r\n        this.handleClickPrev();\r\n        this.hoveredMonthElem && this.hoveredMonthElem.scrollIntoView();\r\n        break;\r\n\r\n      case 'ArrowDown':\r\n        // no need to reopen if already opened\r\n        if (this.calendar.isOpen) return;\r\n        this.openList();\r\n        break;\r\n\r\n      default:\r\n    }\r\n  };\r\n\r\n  onClickOutside = (e) => {\r\n    if (!this.monthsListElem.contains(e.target)) this.closeList();\r\n  };\r\n\r\n  openList = () => {\r\n    this.calendar.isOpen = true;\r\n\r\n    document.addEventListener('keydown', this.handleMenuKeyStrokes);\r\n    document.addEventListener('click', this.onClickOutside);\r\n  };\r\n\r\n  closeList = () => {\r\n    this.calendar.isOpen       = false;\r\n    this.calendar.hoveredMonth = undefined;\r\n    this.hoveredMonthElem      = undefined;\r\n\r\n    document.removeEventListener('keydown', this.handleMenuKeyStrokes);\r\n    document.removeEventListener('click', this.onClickOutside);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='calendar'>\r\n\r\n        <IconClose className={'icon-close'}/>\r\n\r\n        <div className=\"title\">תאריך יציאה</div>\r\n\r\n        <div className=\"month-picker\">\r\n          <IconNext onClick={this.handleClickNext}\r\n                    disabled={!this.calendar.selectedMonth.next}/>\r\n\r\n          <div\r\n            className={classNames('months', { opened: this.calendar.isOpen })}\r\n            ref={(element) => this.monthsListElem = element}>\r\n\r\n            <div className=\"selected\"\r\n                 onClick={this.handleToggleShowList}>\r\n              {this.calendar.selectedMonth.name}\r\n            </div>\r\n\r\n            <MonthList months={this.calendar.months}\r\n                       onClick={this.handleMonthSelection}\r\n                       onMouseOver={this.handleMonthHovered}\r\n                       setRef={this.setHoveredMonthElem}/>\r\n\r\n          </div>\r\n\r\n          <IconPrevious onClick={this.handleClickPrev}\r\n                        disabled={!this.calendar.selectedMonth.prev}/>\r\n        </div>\r\n\r\n        <DaysOfWeek/>\r\n\r\n        <Month month={this.calendar.selectedMonth}\r\n               selectedDay={this.calendar.selectedDay}\r\n               onClickDay={this.handleDaySelection}></Month>\r\n\r\n        <Legend/>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default inject('store')(observer(Datepicker));\r\n","import React, { Component } from 'react';\r\n\r\nimport './App.scss';\r\n\r\nimport Datepicker from './components/Datepicker'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n          <Datepicker/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'mobx-react';\r\nimport Store from './store';\r\n\r\nimport './index.scss';\r\n\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={Store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}