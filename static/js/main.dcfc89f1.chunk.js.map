{"version":3,"sources":["store/calendar.js","store/index.js","components/Day.jsx","components/Week.jsx","components/Month.jsx","components/Legend.jsx","components/MonthList.jsx","components/DaysOfWeek.jsx","components/Icons.jsx","components/Datepicker.jsx","App.js","serviceWorker.js","index.js"],"names":["Calendar","_this","this","Object","classCallCheck","init","i","startOfMonth","moment","startOf","add","month","Month","months","push","forEach","index","prev","next","setInRangeSelectedDays","autorun","startDay","endDay","days","day","startDate","date","endDate","isBetween","selected","setInRangeHoveredDays","endHoveredDay","endHoveredDate","hovered","isOpen","isBefore","isSameOrBefore","hoveredDay","isAfter","reduce","acc","curr","concat","weeks","find","hoveredMonth","d","today","endOfMonth","endOf","endOfWeekMonth","startOfWeekMonth","current","year","value","id","name","isSame","week","Week","startOfWeek","InRangeDay","OutOfRangeDay","Day","format","_Day","_this2","possibleConstructorReturn","getPrototypeOf","call","selectable","isSameOrAfter","inherits","_Day2","_this3","undefined","decorate","observable","computed","selectedMonth","selectDay","action","setHoveredDay","Store","calendar","store","_this$props","props","onClickDay","onMouseOverDay","onMouseOutDay","className","classNames","start-day","end-day","end-hovered-day","react_default","a","createElement","onClick","onMouseOver","onMouseOut","Component","defaultProps","observer","restProps","objectWithoutProperties","map","components_Day","assign","key","reverse","components_Week","Legend","MonthList","setRef","list","ref","el","DaysOfWeek","IconNext","_ref","disabled","xmlns","viewBox","fill","IconPrevious","_ref2","IconClose","_ref3","Datepicker","handleClickNext","handleClickPrev","handleToggleShowList","closeList","openList","handleMonthSelection","handleMonthHovered","handleDaySelection","console","log","toDate","handleMouseOverDay","handleHoveredDay","handleMouseOutDay","setHoveredMonthElem","hoveredMonthElem","handleMenuKeyStrokes","e","newHoveredMonth","scrollIntoView","handleKeyStrokes","onClickOutside","monthsListElem","contains","target","document","addEventListener","removeEventListener","opened","element","components_MonthList","components_Month","inject","App","src_components_Datepicker","Boolean","window","location","hostname","match","ReactDOM","render","index_module","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dcfc89f1.chunk.js","sourcesContent":["import { decorate, observable, computed, action, autorun } from \"mobx\";\r\nimport moment from \"moment\";\r\n\r\nclass Calendar {\r\n  constructor() {\r\n    this.months = [];\r\n    this.isOpen = false;\r\n\r\n    this.init();\r\n  }\r\n\r\n  init = () => {\r\n    // run for next 12 months\r\n    for (let i = 0; i < 12; i++) {\r\n      const startOfMonth = moment().startOf('month').add(i, 'M');\r\n      const month        = new Month(startOfMonth);\r\n\r\n      this.months.push(month);\r\n    }\r\n\r\n    // add prev & next to each month\r\n    this.months.forEach((month, index, months) => {\r\n      month.prev = months[index - 1];\r\n      month.next = months[index + 1];\r\n    });\r\n  };\r\n\r\n  get days() {\r\n    // abort if not weeks\r\n    if (!this.months) return undefined;\r\n\r\n    let weeks = this.months.reduce((acc, curr) => acc.concat(curr.weeks), []);\r\n    let days  = weeks.reduce((acc, curr) => acc.concat(curr.days), []);\r\n    return days;\r\n  }\r\n\r\n  get selectedMonth() {\r\n    return this.months.find((month) => month.selected);\r\n  };\r\n\r\n  set selectedMonth(month) {\r\n    this.months.forEach((month) => month.selected = false);\r\n    month.selected    = true;\r\n    this.hoveredMonth = month;\r\n  }\r\n\r\n  get hoveredMonth() {\r\n    return this.months && this.months.find((month) => month.hovered);\r\n  };\r\n\r\n  set hoveredMonth(month) {\r\n    this.months.forEach((month) => month.hovered = false);\r\n    month && (month.hovered = true);\r\n  }\r\n\r\n  get hoveredDay() {\r\n    return this.days && this.days.find((day) => day.hovered);\r\n  }\r\n\r\n  set hoveredDay(day) {\r\n    this.days && this.days.forEach((day) => day.hovered = false);\r\n\r\n    day.hovered = true;\r\n  }\r\n\r\n  get endHoveredDay() {\r\n    return this.days && this.days.find((day) => day.endHoveredDay);\r\n  }\r\n\r\n  set endHoveredDay(day) {\r\n    this.days.forEach((d) => {\r\n      // reset all days\r\n      d.endHoveredDay = false;\r\n      d.hovered       = false;\r\n    });\r\n\r\n    // set desired day to be endHoveredDay\r\n    day.endHoveredDay = true;\r\n    day.hovered       = true;\r\n  }\r\n\r\n  get startDay() {\r\n    return this.days && this.days.find((day) => day.startDay);\r\n  }\r\n\r\n  set startDay(day) {\r\n    this.days.forEach((d) => {\r\n      // reset all days\r\n      d.startDay      = false;\r\n      d.endDay        = false;\r\n      d.selected      = false;\r\n      d.hovered       = false;\r\n      d.endHoveredDay = false;\r\n\r\n      // set for selected day\r\n      if (d === day) {\r\n        day.startDay = true;\r\n        day.selected = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  get endDay() {\r\n    return this.days && this.days.find((day) => day.endDay);\r\n  }\r\n\r\n  set endDay(day) {\r\n    day.endDay   = true;\r\n    day.selected = true;\r\n  }\r\n\r\n  selectDay(day) {\r\n    if (!this.startDay && !this.endDay) {\r\n      this.startDay = day;\r\n    } else if (this.startDay && !this.endDay) {\r\n      // set as startDay if selecting earlier startDay the existing one\r\n      if (day.date.isBefore(this.startDay.date, 'day'))\r\n        return this.startDay = day;\r\n\r\n      this.endDay = day;\r\n    } else if (this.startDay && this.endDay) {\r\n      this.startDay = day;\r\n    }\r\n  }\r\n\r\n  handleHoveredDay(day) {\r\n    if (!this.startDay && !this.endDay) {\r\n      this.hoveredDay = day;\r\n\r\n    } else if (this.startDay && !this.endDay) {\r\n      if (day.date.isSameOrBefore(this.startDay.date, 'day'))\r\n        this.hoveredDay = day;\r\n\r\n      else if (day.date.isAfter(this.startDay.date, 'day'))\r\n        this.endHoveredDay = day;\r\n\r\n    } else if (this.startDay && this.endDay) {\r\n\r\n    }\r\n  }\r\n\r\n  setInRangeSelectedDays = autorun(() => {\r\n    // abort if no range\r\n    if (!this.startDay || !this.endDay) return;\r\n\r\n    this.days.forEach((day) => {\r\n      const startDate = this.startDay.date;\r\n      const endDate   = this.endDay.date;\r\n\r\n      day.date.isBetween(startDate, endDate, 'day', '()') && (day.selected = true)\r\n    });\r\n  });\r\n\r\n  setInRangeHoveredDays = autorun(() => {\r\n    // abort if no range\r\n    if (!this.startDay || !this.endHoveredDay) return;\r\n\r\n    this.days.forEach((day) => {\r\n      const startDate      = this.startDay.date;\r\n      const endHoveredDate = this.endHoveredDay.date;\r\n\r\n      day.date.isBetween(startDate, endHoveredDate, 'day', '()') && (day.hovered = true)\r\n    });\r\n  });\r\n}\r\n\r\nclass Month {\r\n  constructor(startOfMonth) {\r\n    let monthNames       = ['ינואר', 'פברואר', 'מרץ', 'אפריל', 'מאי', 'יוני', 'יולי', 'אוגוסט', 'ספטמבר', 'אוקטובר', 'נובמבר', 'דצמבר'];\r\n    let today            = moment();\r\n    let endOfMonth       = moment(startOfMonth).endOf('month');\r\n    let endOfWeekMonth   = moment(startOfMonth).endOf('month').day('saturday');\r\n    let startOfWeekMonth = moment(startOfMonth).startOf('month').day('sunday');\r\n    let current          = moment(startOfWeekMonth);\r\n\r\n    this.year     = startOfMonth.year();\r\n    this.value    = startOfMonth.month();\r\n    this.id       = `${this.year}-${this.value}`;\r\n    this.name     = `${monthNames[this.value]} ${this.year}`;\r\n    this.selected = today.isSame(startOfMonth, 'month') ? true : false;\r\n    this.hovered  = false;\r\n    this.weeks    = [];\r\n\r\n    // run for each week of the month\r\n    while (current.isSameOrBefore(endOfWeekMonth, 'day')) {\r\n      let week = new Week(current, startOfMonth, endOfMonth);\r\n\r\n      this.weeks.push(week);\r\n\r\n      current.add(1, 'week');\r\n    }\r\n  }\r\n}\r\n\r\nclass Week {\r\n  constructor(startOfWeek, startOfMonth, endOfMonth) {\r\n    this.id   = startOfWeek.week();\r\n    this.days = [];\r\n\r\n    // loop for 7 days of week\r\n    for (let i = 0; i < 7; i++) {\r\n      let date = new moment(startOfWeek).add(i, 'day');\r\n      let day  = date.isBetween(startOfMonth, endOfMonth, 'day', '[]')\r\n        ? new InRangeDay(date)\r\n        : new OutOfRangeDay(date);\r\n\r\n      this.days.push(day);\r\n    }\r\n  }\r\n}\r\n\r\nexport class Day {\r\n  constructor(date) {\r\n    this.id            = date.format('x');\r\n    this.date          = moment(date);\r\n    this.selected      = false;\r\n    this.hovered       = false;\r\n    this.endHoveredDay = false;\r\n    this.startDay      = false;\r\n    this.endDay        = false;\r\n  }\r\n}\r\n\r\nexport class InRangeDay extends Day {\r\n  constructor(date) {\r\n    super(date);\r\n\r\n    let today = moment();\r\n\r\n    this.value      = date.format('D');\r\n    this.selectable = date.isSameOrAfter(today, 'day');\r\n  }\r\n}\r\n\r\nexport class OutOfRangeDay extends Day {\r\n  constructor(date) {\r\n    super(date);\r\n\r\n    this.value      = undefined;\r\n    this.selectable = false;\r\n  }\r\n}\r\n\r\ndecorate(Calendar,\r\n  {\r\n    months: observable,\r\n    isOpen: observable,\r\n    days: computed,\r\n    selectedMonth: computed,\r\n    hoveredMonth: computed,\r\n    endHoveredDay: computed,\r\n    startDay: computed,\r\n    endDay: computed,\r\n    selectDay: action,\r\n    setHoveredDay: action,\r\n  });\r\n\r\ndecorate(Month,\r\n  {\r\n    year: observable,\r\n    value: observable,\r\n    id: observable,\r\n    name: observable,\r\n    selected: observable,\r\n    hovered: observable,\r\n    weeks: observable,\r\n  });\r\n\r\ndecorate(Week,\r\n  {\r\n    id: observable,\r\n    days: observable,\r\n  });\r\n\r\ndecorate(Day,\r\n  {\r\n    id: observable,\r\n    date: observable,\r\n    selected: observable,\r\n    hovered: observable,\r\n    endHoveredDay: observable,\r\n    startDay: observable,\r\n    endDay: observable,\r\n  });\r\n\r\nexport default Calendar;","import { observable, decorate } from 'mobx';\r\nimport Calendar from './calendar';\r\n\r\nclass Store {\r\n  calendar = new Calendar();\r\n}\r\n\r\ndecorate(Store, { calendar: observable });\r\n\r\nexport default new Store();\r\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { observer } from \"mobx-react\";\n\nclass Day extends Component {\n  render() {\n    const { day, onClickDay, onMouseOverDay, onMouseOutDay } = this.props;\n    const className                                          = classNames('day', {\n      selectable: day.selectable,\n      selected: day.selected,\n      'start-day': day.startDay,\n      'end-day': day.endDay,\n      'hovered': day.hovered,\n      'end-hovered-day': day.endHoveredDay,\n    });\n\n    return (\n      <span className={className}\n            onClick={() => onClickDay(day)}\n            onMouseOver={() => onMouseOverDay(day)}\n            onMouseOut={() => onMouseOutDay(day)}>{day.value}</span>\n    )\n  }\n}\n\n// set default props\nDay.defaultProps = {\n  day: {}\n};\n\nexport default observer(Day);\n","import React, { Component } from 'react';\nimport Day from \"./Day\";\nimport { observer } from \"mobx-react\";\n\nclass Week extends Component {\n  render() {\n    const { week, onClickDay, ...restProps } = this.props;\n    const days                               = week && week.days.map((day) =>\n      <Day\n        key={day.id}\n        day={day}\n        onClickDay={onClickDay}\n        {...restProps}></Day>);\n\n    // reverse days to match rtl layouts\n    days.reverse();\n\n    return (\n      <div className={'week'}>{days}</div>\n    )\n  }\n}\n\n// set default props\nWeek.defaultProps = {\n  week: {\n    days: []\n  }\n};\n\nexport default observer(Week);\n","import React, { Component } from 'react';\nimport Week from \"./Week\";\n\nclass Month extends Component {\n  render() {\n    const { month, onClickDay, ...restProps } = this.props;\n    const weeks                 = month.weeks.map((week) => <Week\n      key={week.id}\n      week={week}\n      onClickDay={onClickDay}\n      {...restProps}></Week>);\n\n    return (\n      <div className={'month'}>{weeks}</div>\n    )\n  }\n}\n\n// set default props\nMonth.defaultProps = {\n  month: {\n    weeks: []\n  }\n};\n\nexport default Month;\n","import React from 'react';\n\nexport default function Legend() {\n  return (\n    <div className=\"legend\">\n      <ul>\n        <li>\n          <span className='circle blue'></span>\n          <label>תאריכי יציאה וחזרה אפשריים</label>\n        </li>\n        <li>\n          <span className='circle pink'></span>\n          <label>אפשרית טיסת צ'רטר בתאריכים אלו</label>\n        </li>\n\n      </ul>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport classNames from \"classnames\";\nimport { observer } from \"mobx-react\";\n\nclass MonthList extends Component {\n  render() {\n    const { months, onClick, onMouseOver, setRef } = this.props;\n    const list                                     = months.map((month) => (\n      <li key={month.id}\n          className={classNames({ hovered: month.hovered })}\n          ref={(el) => {\n            if (month.hovered) {\n              setRef(el)\n            }\n          }}\n          onClick={() => onClick(month)}\n          onMouseOver={() => onMouseOver(month)}>\n        {month.name}\n      </li>));\n\n    return (\n      <ul>\n        {list}\n      </ul>\n    )\n  }\n}\n\n// set default props\nMonthList.defaultProps = {\n  month: {\n    weeks: []\n  }\n};\n\nexport default observer(MonthList);\n","import React from 'react';\r\n\r\nexport default function DaysOfWeek() {\r\n  return (\r\n    <div className=\"days-of-week\">\r\n      <div className=\"day\">ש'</div>\r\n      <div className=\"day\">ו'</div>\r\n      <div className=\"day\">ה'</div>\r\n      <div className=\"day\">ד'</div>\r\n      <div className=\"day\">ג'</div>\r\n      <div className=\"day\">ב'</div>\r\n      <div className=\"day\">א'</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport classNames from \"classnames\";\r\n\r\nexport function IconNext({onClick, className, disabled}) {\r\n  return (\r\n    <div\r\n      className={classNames('icon-container', { disabled })}\r\n      onClick={onClick}>\r\n      <svg className={classNames('icon icon-next', className)}\r\n           xmlns=\"http://www.w3.org/2000/svg\"\r\n           viewBox=\"8 6 8 12\">\r\n        <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/>\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport function IconPrevious({onClick, className, disabled}) {\r\n  return (\r\n    <div\r\n      className={classNames('icon-container', { disabled })}\r\n      onClick={onClick}>\r\n      <svg className={classNames('icon icon-previous', className)}\r\n           xmlns=\"http://www.w3.org/2000/svg\"\r\n           viewBox=\"8 6 8 12\">\r\n        <path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/>\r\n        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function IconClose({className}) {\r\n  return (\r\n    <svg className={classNames('icon icon-close', className)}\r\n         xmlns=\"http://www.w3.org/2000/svg\"\r\n         viewBox=\"63 63 386 386\">\r\n      <path\r\n        d=\"M437.5 386.6L306.9 256l130.6-130.6c14.1-14.1 14.1-36.8 0-50.9-14.1-14.1-36.8-14.1-50.9 0L256 205.1 125.4 74.5c-14.1-14.1-36.8-14.1-50.9 0-14.1 14.1-14.1 36.8 0 50.9L205.1 256 74.5 386.6c-14.1 14.1-14.1 36.8 0 50.9 14.1 14.1 36.8 14.1 50.9 0L256 306.9l130.6 130.6c14.1 14.1 36.8 14.1 50.9 0 14-14.1 14-36.9 0-50.9z\"/>\r\n    </svg>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport Month from './Month';\r\nimport Legend from './Legend';\r\nimport MonthList from './MonthList';\r\nimport DaysOfWeek from './DaysOfWeek';\r\nimport { IconNext, IconPrevious, IconClose } from './Icons';\r\n\r\nimport './Datepicker.scss';\r\n\r\nclass Datepicker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.calendar         = this.props.store.calendar;\r\n    this.monthsListElem   = undefined;\r\n    this.hoveredMonthElem = undefined;\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeyStrokes);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handleKeyStrokes);\r\n  }\r\n\r\n  handleClickNext = () => {\r\n    // abort if not next month\r\n    if (!this.calendar.selectedMonth.next) return;\r\n\r\n    this.calendar.selectedMonth = this.calendar.selectedMonth.next;\r\n  };\r\n\r\n  handleClickPrev = () => {\r\n    // abort if not next month\r\n    if (!this.calendar.selectedMonth.prev) return;\r\n\r\n    this.calendar.selectedMonth = this.calendar.selectedMonth.prev;\r\n  };\r\n\r\n  handleToggleShowList = () => {\r\n    this.calendar.isOpen ? this.closeList() : this.openList();\r\n  };\r\n\r\n  handleMonthSelection = (selectedMonth) => {\r\n    this.calendar.selectedMonth = selectedMonth;\r\n    this.closeList();\r\n  };\r\n\r\n  handleMonthHovered = (hoveredMonth) => {\r\n    this.calendar.hoveredMonth = hoveredMonth;\r\n  };\r\n\r\n  handleDaySelection = (day) => {\r\n    // abort if day not selectable\r\n    if (!day.selectable) return;\r\n\r\n    this.calendar.selectDay(day);\r\n    console.log(day.date.toDate());\r\n  };\r\n\r\n  handleMouseOverDay = (day) => {\r\n    // abort if day not selectable\r\n    if (!day.selectable) return;\r\n\r\n    this.calendar.handleHoveredDay(day);\r\n  };\r\n\r\n  handleMouseOutDay = (day) => {\r\n    day.hovered       = false;\r\n    day.endHoveredDay = false;\r\n  };\r\n\r\n  setHoveredMonthElem = (el) => {\r\n    this.hoveredMonthElem = el;\r\n  };\r\n\r\n  handleMenuKeyStrokes = (e) => {\r\n    // handle keystrokes for opened menu\r\n    if (this.calendar.isOpen) {\r\n      let newHoveredMonth;\r\n\r\n      switch (e.key) {\r\n        case 'ArrowDown':\r\n          // if no hovered month set it to the first month\r\n          newHoveredMonth = this.calendar.hoveredMonth\r\n            ? this.calendar.hoveredMonth.next\r\n            : this.calendar.months[0];\r\n\r\n          // abort if at the end of list\r\n          if (!newHoveredMonth) return;\r\n\r\n          this.calendar.hoveredMonth = newHoveredMonth;\r\n          this.hoveredMonthElem && this.hoveredMonthElem.scrollIntoView();\r\n          break;\r\n\r\n        case 'ArrowUp':\r\n          // if no hovered month set it to the first month\r\n          newHoveredMonth = this.calendar.hoveredMonth\r\n            ? this.calendar.hoveredMonth.prev\r\n            : this.calendar.months[0];\r\n\r\n          // abort if at the end of list\r\n          if (!newHoveredMonth) return;\r\n\r\n          this.calendar.hoveredMonth = newHoveredMonth;\r\n          this.hoveredMonthElem && this.hoveredMonthElem.scrollIntoView();\r\n          break;\r\n\r\n        case 'Escape':\r\n          this.closeList();\r\n          break;\r\n\r\n        case 'Enter':\r\n          this.calendar.selectedMonth = this.calendar.hoveredMonth;\r\n          this.closeList();\r\n          break;\r\n\r\n        default:\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n  handleKeyStrokes = (e) => {\r\n    switch (e.key) {\r\n      case 'ArrowLeft':\r\n        this.handleClickNext();\r\n        this.hoveredMonthElem && this.hoveredMonthElem.scrollIntoView();\r\n        break;\r\n\r\n      case 'ArrowRight':\r\n        this.handleClickPrev();\r\n        this.hoveredMonthElem && this.hoveredMonthElem.scrollIntoView();\r\n        break;\r\n\r\n      case 'ArrowDown':\r\n        // no need to reopen if already opened\r\n        if (this.calendar.isOpen) return;\r\n        this.openList();\r\n        break;\r\n\r\n      default:\r\n    }\r\n  };\r\n\r\n  onClickOutside = (e) => {\r\n    if (!this.monthsListElem.contains(e.target)) this.closeList();\r\n  };\r\n\r\n  openList = () => {\r\n    this.calendar.isOpen = true;\r\n\r\n    document.addEventListener('keydown', this.handleMenuKeyStrokes);\r\n    document.addEventListener('click', this.onClickOutside);\r\n  };\r\n\r\n  closeList = () => {\r\n    this.calendar.isOpen       = false;\r\n    this.calendar.hoveredMonth = undefined;\r\n    this.hoveredMonthElem      = undefined;\r\n\r\n    document.removeEventListener('keydown', this.handleMenuKeyStrokes);\r\n    document.removeEventListener('click', this.onClickOutside);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='calendar'>\r\n\r\n        <IconClose className={'icon-close'}/>\r\n\r\n        <div className=\"title\">תאריך יציאה</div>\r\n\r\n        <div className=\"month-picker\">\r\n          <IconNext onClick={this.handleClickNext}\r\n                    disabled={!this.calendar.selectedMonth.next}/>\r\n\r\n          <div\r\n            className={classNames('months', { opened: this.calendar.isOpen })}\r\n            ref={(element) => this.monthsListElem = element}>\r\n\r\n            <div className=\"selected\"\r\n                 onClick={this.handleToggleShowList}>\r\n              {this.calendar.selectedMonth.name}\r\n            </div>\r\n\r\n            <MonthList months={this.calendar.months}\r\n                       onClick={this.handleMonthSelection}\r\n                       onMouseOver={this.handleMonthHovered}\r\n                       setRef={this.setHoveredMonthElem}/>\r\n\r\n          </div>\r\n\r\n          <IconPrevious onClick={this.handleClickPrev}\r\n                        disabled={!this.calendar.selectedMonth.prev}/>\r\n        </div>\r\n\r\n        <DaysOfWeek/>\r\n\r\n        <Month month={this.calendar.selectedMonth}\r\n               onClickDay={this.handleDaySelection}\r\n               onMouseOverDay={this.handleMouseOverDay}\r\n               onMouseOutDay={this.handleMouseOutDay}></Month>\r\n\r\n        <Legend/>\r\n\r\n        <footer className=\"text-left\">\r\n          <h3>start\r\n            date: {this.calendar.startDay && this.calendar.startDay.date.format('DD-MM-YYYY')}\r\n          </h3>\r\n          <h3>end\r\n            date: {this.calendar.endDay && this.calendar.endDay.date.format('DD-MM-YYYY')}\r\n          </h3>\r\n        </footer>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default inject('store')(observer(Datepicker));\r\n","import React, { Component } from 'react';\r\n\r\nimport './App.scss';\r\n\r\nimport Datepicker from './components/Datepicker'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n          <Datepicker/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'mobx-react';\r\nimport Store from './store';\r\n\r\nimport './index.scss';\r\n\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={Store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}